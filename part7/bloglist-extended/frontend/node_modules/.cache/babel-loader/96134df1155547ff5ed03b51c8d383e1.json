{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = '/api/blogs';\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst remove = async id => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.delete(`${baseUrl}/${id}`, config);\n  return response.data;\n};\n\nconst create = async newObject => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.post(baseUrl, newObject, config);\n  return response.data;\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n}; // eslint-disable-next-line import/no-anonymous-default-export\n\n\nexport default {\n  getAll,\n  create,\n  update,\n  setToken,\n  remove\n};","map":{"version":3,"sources":["/Users/joshyee/Desktop/web-projects/fullstackopen-2022/part7/bloglist-extended/frontend/src/services/blogs.js"],"names":["axios","baseUrl","token","setToken","newToken","getAll","request","get","then","response","data","remove","id","config","headers","Authorization","delete","create","newObject","post","update","put"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,YAAhB;AAEA,IAAIC,KAAK,GAAG,IAAZ;;AAEA,MAAMC,QAAQ,GAAGC,QAAQ,IAAI;AAC3BF,EAAAA,KAAK,GAAI,UAASE,QAAS,EAA3B;AACD,CAFD;;AAIA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,OAAO,GAAGN,KAAK,CAACO,GAAN,CAAUN,OAAV,CAAhB;AACA,SAAOK,OAAO,CAACE,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAlC,CAAP;AACD,CAHD;;AAKA,MAAMC,MAAM,GAAG,MAAOC,EAAP,IAAc;AAC3B,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEb;AAAjB;AADI,GAAf;AAGA,QAAMO,QAAQ,GAAG,MAAMT,KAAK,CAACgB,MAAN,CAAc,GAAGf,OAAS,IAAGW,EAAG,EAAhC,EAAmCC,MAAnC,CAAvB;AACA,SAAOJ,QAAQ,CAACC,IAAhB;AACD,CAND;;AASA,MAAMO,MAAM,GAAG,MAAMC,SAAN,IAAmB;AAChC,QAAML,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEb;AAAjB;AADI,GAAf;AAIA,QAAMO,QAAQ,GAAG,MAAMT,KAAK,CAACmB,IAAN,CAAWlB,OAAX,EAAoBiB,SAApB,EAA+BL,MAA/B,CAAvB;AAEA,SAAOJ,QAAQ,CAACC,IAAhB;AACD,CARD;;AAUA,MAAMU,MAAM,GAAG,CAACR,EAAD,EAAKM,SAAL,KAAmB;AAChC,QAAMZ,OAAO,GAAGN,KAAK,CAACqB,GAAN,CAAW,GAAGpB,OAAS,IAAGW,EAAG,EAA7B,EAAgCM,SAAhC,CAAhB;AACA,SAAOZ,OAAO,CAACE,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAlC,CAAP;AACD,CAHD,C,CAKA;;;AACA,eAAe;AAAEL,EAAAA,MAAF;AAAUY,EAAAA,MAAV;AAAkBG,EAAAA,MAAlB;AAA0BjB,EAAAA,QAA1B;AAAoCQ,EAAAA;AAApC,CAAf","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst remove = async (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.delete(`${ baseUrl }/${id}`, config)\n  return response.data\n}\n\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${ baseUrl }/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { getAll, create, update, setToken, remove }"]},"metadata":{},"sourceType":"module"}