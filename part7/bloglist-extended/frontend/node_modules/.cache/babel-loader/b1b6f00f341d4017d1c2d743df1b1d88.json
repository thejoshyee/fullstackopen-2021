{"ast":null,"code":"var _jsxFileName = \"/Users/joshyee/Desktop/web-projects/fullstackopen-2022/part5/bloglist-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from 'react';\nimport Blog from './components/Blog';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport Togglable from './components/Toggable';\nimport './css/styles.css';\nimport BlogForm from './components/BlogForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [blogs, setBlogs] = useState([]);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [loginMessage, setLoginMessage] = useState(null);\n  const [addedBlog, setAddedBlog] = useState(false);\n  const blogFormRef = useRef();\n  const sortedBlogs = blogs.sort((a, b) => {\n    return b.likes - a.likes;\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const initialBlogs = await blogService.getAll();\n      setBlogs(initialBlogs);\n    };\n\n    fetchData();\n  }, [addedBlog]);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const loginForm = () => /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleLogin,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"username\", /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"text\",\n        value: username,\n        name: \"Username\",\n        onChange: _ref => {\n          let {\n            target\n          } = _ref;\n          return setUsername(target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"password\", /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"password\",\n        type: \"password\",\n        value: password,\n        name: \"Password\",\n        onChange: _ref2 => {\n          let {\n            target\n          } = _ref2;\n          return setPassword(target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"loginbutton\",\n      type: \"submit\",\n      children: \"login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n\n  const logout = () => /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"submit\",\n    onClick: logoutUser,\n    children: \"logout\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n\n  const logoutUser = () => {\n    window.localStorage.removeItem('loggedBlogappUser');\n    setUser(null);\n  };\n\n  const handleLogin = async e => {\n    e.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      setLoginMessage('Wrong Credentials');\n      setTimeout(() => {\n        setLoginMessage(null);\n      }, 5000);\n    }\n  };\n\n  const handleMessage = message => {\n    setErrorMessage(message);\n    setTimeout(() => {\n      setErrorMessage(null);\n    }, 5000);\n  };\n\n  const createBlog = async entry => {\n    try {\n      blogFormRef.current.toggleVisibility();\n      const newBlog = await blogService.create(entry);\n      handleMessage(newBlog.title + ' has been created');\n      setBlogs(blogs.concat(newBlog));\n      setAddedBlog(true);\n      setAddedBlog(false);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const blogForm = () => /*#__PURE__*/_jsxDEV(Togglable, {\n    buttonLabel: \"Add Blog\",\n    closeLabel: \"Cancel\",\n    ref: blogFormRef,\n    children: /*#__PURE__*/_jsxDEV(BlogForm, {\n      createBlog: createBlog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n\n  const handleLike = async blog => {\n    try {\n      blog.likes += 1;\n      const likedBlog = await blogService.update(blog.id, blog);\n      setBlogs(blogs.map(blog => blog.id === likedBlog.id ? { ...blog,\n        likes: likedBlog.likes\n      } : blog));\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleDelete = async post => {\n    try {\n      window.confirm(`Do you really want to delete ${post.title}?`);\n      await blogService.remove(post.id);\n      const remainingBlogs = blogs.filter(item => item.id !== post.id);\n      setBlogs(remainingBlogs);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Some Dope Blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), errorMessage === null ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"importantmessage\",\n      className: \"user-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }, this), loginMessage === null ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"login-message\",\n      children: loginMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }, this), user === null ? loginForm() : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [user.name, \" logged-in \", logout()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: blogForm()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: sortedBlogs.map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n          blog: blog,\n          loggedUser: user,\n          handleLike: handleLike,\n          handleDelete: handleDelete\n        }, blog.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"mk/ju7TDf2c2SwNUZ2SKLfKxJtk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/joshyee/Desktop/web-projects/fullstackopen-2022/part5/bloglist-frontend/src/App.js"],"names":["useState","useEffect","useRef","Blog","blogService","loginService","Togglable","BlogForm","App","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","errorMessage","setErrorMessage","loginMessage","setLoginMessage","addedBlog","setAddedBlog","blogFormRef","sortedBlogs","sort","a","b","likes","fetchData","initialBlogs","getAll","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","loginForm","handleLogin","target","value","logout","logoutUser","removeItem","e","preventDefault","login","setItem","stringify","exception","setTimeout","handleMessage","message","createBlog","entry","current","toggleVisibility","newBlog","create","title","concat","console","log","blogForm","handleLike","blog","likedBlog","update","id","map","handleDelete","post","confirm","remove","remainingBlogs","filter","item","name"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport Togglable from './components/Toggable'\nimport './css/styles.css'\nimport BlogForm from './components/BlogForm'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [loginMessage, setLoginMessage] = useState(null)\n  const [addedBlog, setAddedBlog] = useState(false)\n\n  const blogFormRef = useRef()\n\n  const sortedBlogs = blogs.sort((a,b) => {\n    return b.likes - a.likes\n  })\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const initialBlogs = await blogService.getAll()\n      setBlogs(initialBlogs)\n    }\n    fetchData()\n  }, [addedBlog])\n\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  },[])\n\n  const loginForm = () => (\n    <form onSubmit={handleLogin}>\n      <div>\n        username\n        <input\n          id='username'\n          type=\"text\"\n          value={username}\n          name=\"Username\"\n          onChange={({ target }) => setUsername(target.value)}\n        />\n      </div>\n      <div>\n        password\n        <input\n          id='password'\n          type=\"password\"\n          value={password}\n          name=\"Password\"\n          onChange={({ target }) => setPassword(target.value)}\n        />\n      </div>\n      <button id='loginbutton' type=\"submit\">login</button>\n    </form>\n  )\n\n  const logout = () => (\n    <button type=\"submit\" onClick={logoutUser}>logout</button>\n  )\n\n  const logoutUser = () => {\n    window.localStorage.removeItem('loggedBlogappUser')\n    setUser(null)\n  }\n\n\n  const handleLogin = async e => {\n    e.preventDefault()\n\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setLoginMessage('Wrong Credentials')\n      setTimeout(() => {\n        setLoginMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleMessage = (message) => {\n    setErrorMessage(message)\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 5000)\n  }\n\n  const createBlog = async (entry) => {\n    try {\n\n      blogFormRef.current.toggleVisibility()\n\n      const newBlog = await blogService.create(entry)\n      handleMessage(newBlog.title + ' has been created')\n      setBlogs(blogs.concat(newBlog))\n      setAddedBlog(true)\n      setAddedBlog(false)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const blogForm = () => (\n    <Togglable buttonLabel='Add Blog' closeLabel=\"Cancel\" ref={blogFormRef}>\n      <BlogForm createBlog={createBlog} />\n    </Togglable>\n  )\n\n\n  const handleLike = async (blog) => {\n    try {\n      blog.likes += 1\n      const likedBlog = await blogService.update(blog.id, blog)\n      setBlogs(blogs.map(blog =>\n        blog.id === likedBlog.id ?\n          { ...blog, likes: likedBlog.likes }\n          : blog\n      ))\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n\n  const handleDelete = async (post) => {\n    try {\n      window.confirm(`Do you really want to delete ${post.title}?`)\n      await blogService.remove(post.id)\n      const remainingBlogs = blogs.filter(item => item.id !== post.id)\n      setBlogs(remainingBlogs)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  return (\n    <div>\n      <h2>Some Dope Blogs</h2>\n      {\n        errorMessage === null ?\n          <></>\n          :\n          <p id='importantmessage' className=\"user-message\">{errorMessage}</p>\n      }\n\n      {\n        loginMessage === null ?\n          <></>\n          :\n          <p className=\"login-message\">{loginMessage}</p>\n      }\n\n      {user === null ?\n        loginForm() :\n        <div>\n\n          <div>{user.name} logged-in {logout()}</div>\n          <div>\n            {blogForm()}\n          </div>\n\n          <div>\n            {sortedBlogs.map(blog =>\n              <Blog\n                key={blog.id}\n                blog={blog}\n                loggedUser={user}\n                handleLike={handleLike}\n                handleDelete={handleDelete}\n              />)\n            }\n          </div>\n\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}